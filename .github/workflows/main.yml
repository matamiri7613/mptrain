name: Deploy Flask App

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Test SSH connection
      uses: appleboy/ssh-action@master
      with:
        host: 82.115.21.17
        username: root
        key: 133976beh
        script: |
          echo "SSH connection successful"
          echo "Python version: $(python3 --version)"
          echo "Current directory: $(pwd)"
          
    - name: Prepare server environment
      uses: appleboy/ssh-action@master
      with:
        host: 82.115.21.17
        username: root
        key: 133976beh
        script: |
          # Update package lists
          apt update
          
          # Install required packages
          apt install -y python3-venv python3-pip nginx
          
          # Create directory with proper permissions
          mkdir -p /var/www/flask-app
          chmod 755 /var/www/flask-app
          
          echo "Server preparation complete"
          
    - name: Copy application files
      uses: appleboy/scp-action@master
      with:
        host: 82.115.21.17
        username: root
        key: 133976beh
        source: "*.py,templates/**,static/**,*.json,requirements.txt"
        target: "/var/www/flask-app"
        strip_components: 0
        
    - name: Set up application
      uses: appleboy/ssh-action@master
      with:
        host: 82.115.21.17
        username: root
        key: 133976beh
        script: |
          cd /var/www/flask-app
          
          # Create virtual environment if it doesn't exist
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          
          # Activate virtual environment and install dependencies
          source venv/bin/activate
          pip install --upgrade pip
          
          # Install requirements
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          else
            pip install flask gunicorn
            echo "flask\ngunicorn" > requirements.txt
          fi
          
          # Set up Nginx configuration
          cat > /etc/nginx/sites-available/flask-app << 'EOL'
          server {
              listen 80;
              server_name 82.115.21.17;
              
              location / {
                  proxy_pass http://127.0.0.1:8000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
              }
          }
          EOL
          
          # Enable site and test configuration
          ln -sf /etc/nginx/sites-available/flask-app /etc/nginx/sites-enabled/
          nginx -t && systemctl restart nginx || echo "Nginx configuration failed"
          
          # Create systemd service
          cat > /etc/systemd/system/flask-app.service << 'EOL'
          [Unit]
          Description=Flask App Service
          After=network.target
          
          [Service]
          User=root
          WorkingDirectory=/var/www/flask-app
          ExecStart=/var/www/flask-app/venv/bin/gunicorn app:app -b 127.0.0.1:8000
          Restart=always
          
          [Install]
          WantedBy=multi-user.target
          EOL
          
          # Start and enable service
          systemctl daemon-reload
          systemctl enable flask-app
          systemctl restart flask-app
          
          # Check service status
          systemctl status flask-app --no-pager
          
          # Check if application is accessible
          curl -I http://localhost:8000 || echo "Application not responding on port 8000"
          
          echo "Deployment completed"
